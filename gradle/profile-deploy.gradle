apply plugin: 'net.researchgate.release'
apply plugin: 'maven-publish'
apply plugin: 'signing'
   
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

release {
    tagTemplate = 'v${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = ['version', 'mainversion']
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

java {
    withJavadocJar()
    withSourcesJar()
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'generic-message-consumer'
                description = 'Generic message consumer for event handling in KIT Data Manager 2.0 services'
                url = 'http://datamanager.kit.edu'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Jejkal'
                        name = 'Thomas Jejkal'
                        email = 'webmaster@datamanager.kit.edu'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/kit-data-manager/generic-message-consumer'
                    developerConnection = 'scm:git:github.com/kit-data-manager/generic-message-consumer'
                    url = 'https://github.com/kit-data-manager/generic-message-consumer'
                }
            }         
        }
    }
}


signing {
    required { !project.version.endsWith("-SNAPSHOT") && !project.hasProperty("skipSigning") }
   
    if (project.findProperty("signingKey")) {
       def signingKey = findProperty("signingKey")
       def signingPassword = findProperty("signingPassword")   
       useInMemoryPgpKeys(signingKey, signingPassword)

       sign publishing.publications.maven
    }else {
       println 'WARNING: No property \'signingKey\' found. Artifact signing will be skipped.'
    }
}
javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
